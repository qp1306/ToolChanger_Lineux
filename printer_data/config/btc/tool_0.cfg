#TOOL 0 CONFIGURATION
#Hardware:
# V6 CHP
# Sherpa Micro
# SHT36V3  # https://mellow.klipper.cn/en/docs/ProductDoc/ToolBoard/fly-sht36/sht36_v3/cfg
# 3010 hotend fan
# dual 4010 part cooling fan
# USE THE FOLLLOWING GITHUB FOR EDDYH PROBE SETTINGS AND SETUP
#https://github.com/bigtreetech/Eddy/blob/master/sample-bigtreetech-eddy-zoffbeta.cfg

# https://bttwiki.com/Eddy.html#z-offset

####################
# Tool0 Variables
[gcode_macro _Variables_t0]
variable_pickuplocation_x:      373.0  # X Dock position for pickup move
variable_dropofflocation_x:     362.0    # X Dock position for dropoff move

variable_xoffset: 0              # For tool 0, offsets are all 0
variable_yoffset: 0              #
variable_zoffset: 0              #
variable_shaperfreq_x: 54.2      # Tool 0 input shaper
variable_shaperfreq_y: 55.2      #
variable_shapertype_x: "mzv"     #
variable_shapertype_y: "ei"      #
variable_pressure_advance: 0.036      # pressure advance
variable_pressure_advance_smooth_time: 0.04      # pressure advance smooth time

# End of section options
#######################################################

variable_last_press: 0
gcode:

##### Neopixel #######################################
# Uncomment the following if you're using neopixel
[include ./leds_0.cfg]
######################################################

###################################################################
# These 2 senses pins provides actual physical location of toolhead
[gcode_button carriagesense_t0]
pin: ^toolboard0:gpio20
press_gcode:
  #_tool_off_carriage TOOLNUMBER=0
release_gcode:
  #_tool_on_carriage TOOLNUMBER=0

[gcode_button docksense_t0]
pin: ^toolboard0:gpio16
press_gcode:
release_gcode:
  #_tool_atdock TOOLNUMBER=0
#####################################################################




#####################################################################
#      Notes
#####################################################################
## 请将[include SHT36V3.cfg]添加到printer.cfg下
## Please add [include SHT36V3.cfg] under printer.cfg
## 工具板将使用以下几种配置，如果其他配置中使用到下面的配置可能会冲突
## The tool plate will use the following configurations, 
## and if the following configurations are used in other configurations, conflicts may occur.
## [resonance_tester] && [extruder] && [tmc2209 extruder] && [fan] && [heater_fan my_hotend_fan]
## [probe] && [bltouch] && [stepper_x]

#####################################################################
#      Master ID Configuration
#####################################################################
[mcu toolboard0]  # 工具主板序列号
## CAN ID
## ~/klippy-env/bin/python ~/klipper/scripts/canbus_query.py can0
#canbus_uuid: 46edea19ecbe
canbus_uuid: 405a5aae9ee0
#--------------------------------------------------------------------
# # RS232 ID
## 请根据固件配置填写波特率
## Please fill in the baud rate according to the firmware configuration.
# serial: /dev/serial/by-path/platform-1c1c000.usb-usb-0:1.2:1.0-port0
# baud: 250000
# restart_method:command

#####################################################################
#      Temperature monitoring
#####################################################################
[temperature_sensor Tool0]
sensor_type: temperature_mcu
sensor_mcu: toolboard0

#####################################################################
#      Accelerometer
#####################################################################
## https://www.klipper3d.org/Measuring_Resonances.html?h=adxl#adxl345
[lis2dw toolboard0]
cs_pin: toolboard0:gpio12
spi_software_sclk_pin: toolboard0:gpio2
spi_software_mosi_pin: toolboard0:gpio3
spi_software_miso_pin: toolboard0:gpio4
#--------------------------------------------------------------------
[resonance_tester]
accel_chip: lis2dw toolboard0
probe_points: 150, 150, 20
# Somewhere slightly above the middle of your print bed
# 在打印床的中间稍微偏上的位置
min_freq: 5
max_freq: 133
accel_per_hz: 75
hz_per_sec: 1 

#####################################################################
#      Stealthburner LED
#####################################################################
## https://github.com/VoronDesign/Voron-Stealthburner/tree/main
#[neopixel sb_leds]
#pin: SHT36:gpio26
#chain_count: 3
## Number of LEDs
## 灯珠数量
#color_order: GRBW
#initial_RED: 0.4
#initial_GREEN: 0.8
#initial_BLUE: 1
#initial_WHITE: 0.0


##### Neopixel #######################################
# Uncomment the following if you're using neopixel
#[include ./leds_0.cfg]
######################################################


#####################################################################
#      Extruder thermal sensitivity
#####################################################################
## Please select the type of thermocouple you want to use.
## 请根据你想要使用的热敏选择
[extruder]
## Type of sensor - common thermistors are (Generic 3950, ATC Semitec 104GT-2)
## 传感器类型-常见的热敏电阻器是 (Generic 3950, ATC Semitec 104GT-2)
sensor_type: ATC Semitec 104GT-2
sensor_pin: toolboard0:gpio27
###------------------------------------------------------------------
## If using PT1000, please connect the jumper next to the thermal sensitivity.
## 如果使用PT1000请将热敏旁边跳线接上
# sensor_type:PT1000
# sensor_pin:SHT36:gpio27
# pullup_resistor: 1000
###------------------------------------------------------------------
## Using MAX31865 to connect PT100 or PT1000
## 使用MAX31865接PT100或者PT1000
# sensor_type: MAX31865
# sensor_pin: SHT36:gpio17
# spi_software_sclk_pin: SHT36:gpio2
# spi_software_mosi_pin: SHT36:gpio3
# spi_software_miso_pin: SHT36:gpio4
# rtd_reference_r: 430  ## 使用PT100时请设置为430，使用PT1000时请设置为4300
#rtd_nominal_r: 100  ## 使用PT100时请设置为100，使用PT1000时请设置为1000

#####################################################################
#      extruder
#####################################################################
## https://www.klipper3d.org/Config_Reference.html#extruder
[extruder]
step_pin: toolboard0:gpio7
dir_pin: toolboard0:gpio6
enable_pin: !toolboard0:gpio14
rotation_distance: 21.84
## rotation_distance = The original rotation_distance multiplied by the actual extrusion length divided by the requested extrusion length.
## 校准步进值: 22.44=旧值22*实际值102/目标值100
gear_ratio:50:10
## 减速比（伽利略齿比7.5:1 并且这行注释掉；BMG为50：17，输出轴在前，输入轴在后）
microsteps:16
full_steps_per_rotation: 200   
nozzle_diameter:0.400
filament_diameter:1.75
heater_pin: toolboard0:gpio23
min_temp:-200
max_temp:350
max_power:1.0
min_extrude_temp:-200
pressure_advance: 0.05
pressure_advance_smooth_time: 0.040
#max_extrude_only_distance: 200.0   # 挤出流量报错可以注释这个，但是建议重新切片
#喷嘴温度PID校准命令：  "PID_CALIBRATE HEATER=extruder TARGET=245
control: pid
pid_kp: 20.095
pid_ki:1.634
pid_kd: 61.791
###------------------------------------------------------------------
[tmc2209 extruder]
uart_pin: toolboard0:gpio15
interpolate:False
run_current: 0.8
sense_resistor:0.110
stealthchop_threshold:0
###------------------------------------------------------------------
[verify_heater extruder]
max_error: 20
check_gain_time:120
hysteresis: 50
heating_gain: 2


#####################################################################
#      FAN
#####################################################################
#[fan]
#pin:toolboard0:gpio21
###------------------------------------------------------------------
[heater_fan my_hotend_fan]
pin: toolboard0:gpio13
heater: extruder
heater_temp: 40.0


[gcode_arcs]
resolution: 0.1


[gcode_macro t0]
gcode:
	Tool_Pickup TOOLNUMBER=0


#[ldc1612]

[probe_eddy_current btt_eddy]

sensor_type: ldc1612
i2c_address: 43
i2c_mcu: toolboard0
i2c_bus: i2c1e
x_offset: 0 # Remember to set x offset
y_offset: 0 # Remember to set y offset 
z_offset: 1.2 #1.2
speed:10
lift_speed: 15.0
i2c_speed: 4000000


    
#[temperature_probe fly_eddy_probe]
[temperature_probe btt_eddy]
sensor_type: Generic 3950
sensor_pin:toolboard0:gpio28






    
#[gcode_macro BED_MESH_CALIBRATE]
#rename_existing: _BED_MESH_CALIBRATE
#gcode: 
#       _BED_MESH_CALIBRATE horizontal_move_z=2 METHOD=rapid_scan {rawparams}
#       G28 X Y
       
[force_move]
enable_force_move: true


#####################################################################
#####################################################################
#####################################################################
#####################################################################


  # Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[save_variables]
filename: ~/printer_data/config/variables.cfg



# Uncomment this if you are using Eddy as the probe AND the homing endstop
[force_move]
enable_force_move: True # Allows a user to move the z axis down if they have no other means of homing Z and need to calibrate the Eddy.



# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[delayed_gcode RESTORE_PROBE_OFFSET]
initial_duration: 1.
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if not printer["gcode_macro SET_GCODE_OFFSET"].restored %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ svv.nvm_offset|default(0) }
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=restored VALUE=True
  {% endif %}



# Uncomment this if you are using Eddy as the probe AND the homing endstop
# Take note of the lines that should only be used if you have a KNOMI installed.
[gcode_macro G28]
rename_existing: G28.1
gcode:

  G28.1 {rawparams}
  {% if not rawparams or (rawparams and 'Z' in rawparams) %}
    PROBE
    SET_Z_FROM_PROBE
  {% endif %}
  


# Uncomment this if you are using Eddy as the probe AND the homing endstop
[gcode_macro SET_Z_FROM_PROBE]
gcode:
    {% set cf = printer.configfile.settings %}
    SET_GCODE_OFFSET_ORIG Z={printer.probe.last_z_result - cf['probe_eddy_current btt_eddy'].z_offset + printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset}
    G90
    G1 Z{cf.safe_z_home.z_hop}


# Uncomment this if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro Z_OFFSET_APPLY_PROBE]
rename_existing: Z_OFFSET_APPLY_PROBE_ORIG
gcode:
  SAVE_VARIABLE VARIABLE=nvm_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset }



# Uncomment the lines in this macro if you are using Eddy as the probe AND the homing endstop AND would like to use the beta z-offset control
[gcode_macro SET_GCODE_OFFSET]
rename_existing: SET_GCODE_OFFSET_ORIG
variable_restored: False  # Mark whether the var has been restored from NVM
variable_runtime_offset: 0
gcode:
  {% if params.Z_ADJUST %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE={ printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset + params.Z_ADJUST|float }
  {% endif %}
  {% if params.Z %} 
    {% set paramList = rawparams.split() %}
    {% for i in range(paramList|length) %}
      {% if paramList[i]=="Z=0" %}
        {% set temp=paramList.pop(i) %}
        {% set temp="Z_ADJUST=" + (-printer["gcode_macro SET_GCODE_OFFSET"].runtime_offset)|string %}
        {% if paramList.append(temp) %}{% endif %}
      {% endif %}
    {% endfor %}
    {% set rawparams=paramList|join(' ') %}
    SET_GCODE_VARIABLE MACRO=SET_GCODE_OFFSET VARIABLE=runtime_offset VALUE=0
  {% endif %}
  SET_GCODE_OFFSET_ORIG { rawparams }



# This macro automates a lot of the frequency mapping process and simplifies the steps significantly.
[gcode_macro PROBE_EDDY_CURRENT_CALIBRATE_AUTO]
gcode:
  BED_MESH_CLEAR
  G28 X Y
  G90 # Abs positioning
  G1 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } F6000
  {% if 'z' not in printer.toolhead.homed_axes %}
    SET_KINEMATIC_POSITION Z={ printer.toolhead.axis_maximum.z-1 } # Allows the user to work it down until it touches.
  {% endif %}
  PROBE_EDDY_CURRENT_CALIBRATE {rawparams}